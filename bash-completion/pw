source /usr/share/bash-completion/completions/pass

_pw() {
  COMPREPLY=()
  local cur="${COMP_WORDS[COMP_CWORD]}"
  local prefix="${PW_ROOT:-${HOME}/.config/pass/}"
  prefix="${prefix%/}/"

  case ${COMP_CWORD} in
    1)
      pwstores=( $(compgen -d $prefix$cur) )
      for item in ${pwstores[@]}
      do
        COMPREPLY+=("${item#$prefix}")
      done
      unset pwstores
      ;;
    *)
      PW_STORE_DIR_NAME="${COMP_WORDS[1]}"
      PASSWORD_STORE_DIR="${prefix}${PW_STORE_DIR_NAME}"

      # pass expects the first arg to be a verb, so we have to fake the input
      # to its completion routine to look like it's been called directly
      # Yes, this is absolutely filthy

      PASS_ARGS=${COMP_WORDS[@]:2}
      COMP_WORDS=(pass)
      COMP_WORDS+=( ${PASS_ARGS[@]} )
      COMP_LINE="${COMP_WORDS[@]}"
      COMP_CWORD=$(( ${COMP_CWORD} - 1 ))
      let COMP_POINT=$(( ${COMP_POINT} - ${#PW_STORE_DIR_NAME} + 1 ))
      _pass
      ;;
  esac
}

complete -o filenames -F _pw pw

